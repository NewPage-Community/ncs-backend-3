syntax = "proto3";
package ncs.service.user.account.v1;
option go_package = "backend/app/service/user/account/api/grpc/v1";

import "google/api/annotations.proto";

// Base

message Info {
    int64 steam_id = 1;
    string username = 2;
    int64 first_join = 3;
}

// Message

message UIDReq {
    int64 steam_id = 1;
}

message UIDResp {
    int64 uid = 1;
}

message InfoReq {
    int64 uid = 1;
}

message InfoResp {
    Info info = 1;
}

message RegisterReq {
    int64 steam_id = 1;
}

message RegisterResp {
    int64 uid = 1;
}

message ChangeNameReq {
    int64 uid = 1;
    string username = 2;
}

message ChangeNameResp {
}

message GetAllUIDReq {
}

message GetAllUIDResp {
    repeated int64 uid = 1;
}

service Account {
    rpc UID (UIDReq) returns (UIDResp) {
        option (google.api.http) = {
            get: "/user/account/uid/{steam_id}"
        };
    }
    rpc Info (InfoReq) returns (InfoResp) {
        option (google.api.http) = {
            get: "/user/account/{uid}"
        };
    }
    rpc Register (RegisterReq) returns (RegisterResp) {
        option (google.api.http) = {
            post: "/user/account/register"
            body: "*"
        };
    }
    rpc ChangeName (ChangeNameReq) returns (ChangeNameResp) {
        option (google.api.http) = {
            put: "/user/account/{uid}"
            body: "*"
        };
    }
    rpc GetAllUID (GetAllUIDReq) returns (GetAllUIDResp);
}

service Web {
    rpc UID (UIDReq) returns (UIDResp) {
        option (google.api.http) = {
            get: "/user/account/uid/{steam_id}"
        };
    }
    rpc Info (InfoReq) returns (InfoResp) {
        option (google.api.http) = {
            get: "/user/account/{uid}"
        };
    }
}