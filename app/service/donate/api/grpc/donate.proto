syntax = "proto3";
package ncs.donate;
option go_package = "grpc";

import "google/api/annotations.proto";

enum PAY_TYPE {
    NULL = 0;
    ALIPAY = 1;
    WEPAY = 2;
}

message CreateDonateReq {
    int64 steam_id = 1;
    int32 amount = 2;
    PAY_TYPE payment = 3;
}

message CreateDonateResp {
    string out_trade_no = 1;
    string qr_code = 2;
    PAY_TYPE payment = 3;
}

message QueryDonateReq {
    string out_trade_no = 1;
}

message QueryDonateResp {
    int64 uid = 1;
    int32 amount = 2;
    int32 status = 3;
    int64 create_at = 4;
}

message GetDonateListReq {
    int64 start_time = 1;
    int64 end_time = 2;
}

message GetDonateListResp {
    repeated QueryDonateResp list = 1;
}

message AddDonateReq {
    int64 steam_id = 1;
    int32 amount = 2;
}

message AddDonateResp {
}

service Donate {
    rpc CreateDonate (CreateDonateReq) returns (CreateDonateResp) {
        option (google.api.http) = {
            post: "/donate/create"
            body: "*"
        };
    }
    rpc QueryDonate (QueryDonateReq) returns (QueryDonateResp) {
        option (google.api.http) = {
            get: "/donate/query/{out_trade_no}"
        };
    }
    rpc GetDonateList (GetDonateListReq) returns (GetDonateListResp) {
        option (google.api.http) = {
            get: "/donate/list/{start_time}/{end_time}"
            additional_bindings: {
				get: "/donate/list/{start_time}"
			}
        };
    }
    rpc AddDonate (AddDonateReq) returns (AddDonateResp);
}