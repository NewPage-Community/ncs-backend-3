// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: app/service/auth/qq/api/grpc/v1/qq.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SignInWithQQReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInWithQQReq) Reset()         { *m = SignInWithQQReq{} }
func (m *SignInWithQQReq) String() string { return proto.CompactTextString(m) }
func (*SignInWithQQReq) ProtoMessage()    {}
func (*SignInWithQQReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{0}
}
func (m *SignInWithQQReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SignInWithQQReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SignInWithQQReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SignInWithQQReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInWithQQReq.Merge(m, src)
}
func (m *SignInWithQQReq) XXX_Size() int {
	return m.Size()
}
func (m *SignInWithQQReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInWithQQReq.DiscardUnknown(m)
}

var xxx_messageInfo_SignInWithQQReq proto.InternalMessageInfo

type SignInWithQQResp struct {
	AuthUrl              string   `protobuf:"bytes,1,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignInWithQQResp) Reset()         { *m = SignInWithQQResp{} }
func (m *SignInWithQQResp) String() string { return proto.CompactTextString(m) }
func (*SignInWithQQResp) ProtoMessage()    {}
func (*SignInWithQQResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{1}
}
func (m *SignInWithQQResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SignInWithQQResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SignInWithQQResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SignInWithQQResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignInWithQQResp.Merge(m, src)
}
func (m *SignInWithQQResp) XXX_Size() int {
	return m.Size()
}
func (m *SignInWithQQResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SignInWithQQResp.DiscardUnknown(m)
}

var xxx_messageInfo_SignInWithQQResp proto.InternalMessageInfo

func (m *SignInWithQQResp) GetAuthUrl() string {
	if m != nil {
		return m.AuthUrl
	}
	return ""
}

type GetUIDReq struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUIDReq) Reset()         { *m = GetUIDReq{} }
func (m *GetUIDReq) String() string { return proto.CompactTextString(m) }
func (*GetUIDReq) ProtoMessage()    {}
func (*GetUIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{2}
}
func (m *GetUIDReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUIDReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUIDReq.Merge(m, src)
}
func (m *GetUIDReq) XXX_Size() int {
	return m.Size()
}
func (m *GetUIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUIDReq proto.InternalMessageInfo

func (m *GetUIDReq) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

type GetUIDResp struct {
	JwtString            string   `protobuf:"bytes,1,opt,name=jwt_string,json=jwtString,proto3" json:"jwt_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUIDResp) Reset()         { *m = GetUIDResp{} }
func (m *GetUIDResp) String() string { return proto.CompactTextString(m) }
func (*GetUIDResp) ProtoMessage()    {}
func (*GetUIDResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{3}
}
func (m *GetUIDResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetUIDResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetUIDResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetUIDResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUIDResp.Merge(m, src)
}
func (m *GetUIDResp) XXX_Size() int {
	return m.Size()
}
func (m *GetUIDResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUIDResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetUIDResp proto.InternalMessageInfo

func (m *GetUIDResp) GetJwtString() string {
	if m != nil {
		return m.JwtString
	}
	return ""
}

type BindQQReq struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	JwtString            string   `protobuf:"bytes,2,opt,name=jwt_string,json=jwtString,proto3" json:"jwt_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindQQReq) Reset()         { *m = BindQQReq{} }
func (m *BindQQReq) String() string { return proto.CompactTextString(m) }
func (*BindQQReq) ProtoMessage()    {}
func (*BindQQReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{4}
}
func (m *BindQQReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BindQQReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BindQQReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BindQQReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindQQReq.Merge(m, src)
}
func (m *BindQQReq) XXX_Size() int {
	return m.Size()
}
func (m *BindQQReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BindQQReq.DiscardUnknown(m)
}

var xxx_messageInfo_BindQQReq proto.InternalMessageInfo

func (m *BindQQReq) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *BindQQReq) GetJwtString() string {
	if m != nil {
		return m.JwtString
	}
	return ""
}

type BindQQResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BindQQResp) Reset()         { *m = BindQQResp{} }
func (m *BindQQResp) String() string { return proto.CompactTextString(m) }
func (*BindQQResp) ProtoMessage()    {}
func (*BindQQResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{5}
}
func (m *BindQQResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *BindQQResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_BindQQResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *BindQQResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BindQQResp.Merge(m, src)
}
func (m *BindQQResp) XXX_Size() int {
	return m.Size()
}
func (m *BindQQResp) XXX_DiscardUnknown() {
	xxx_messageInfo_BindQQResp.DiscardUnknown(m)
}

var xxx_messageInfo_BindQQResp proto.InternalMessageInfo

type UnbindQQReq struct {
	JwtString            string   `protobuf:"bytes,1,opt,name=jwt_string,json=jwtString,proto3" json:"jwt_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnbindQQReq) Reset()         { *m = UnbindQQReq{} }
func (m *UnbindQQReq) String() string { return proto.CompactTextString(m) }
func (*UnbindQQReq) ProtoMessage()    {}
func (*UnbindQQReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{6}
}
func (m *UnbindQQReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnbindQQReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnbindQQReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnbindQQReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbindQQReq.Merge(m, src)
}
func (m *UnbindQQReq) XXX_Size() int {
	return m.Size()
}
func (m *UnbindQQReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbindQQReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnbindQQReq proto.InternalMessageInfo

func (m *UnbindQQReq) GetJwtString() string {
	if m != nil {
		return m.JwtString
	}
	return ""
}

type UnbindQQResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnbindQQResp) Reset()         { *m = UnbindQQResp{} }
func (m *UnbindQQResp) String() string { return proto.CompactTextString(m) }
func (*UnbindQQResp) ProtoMessage()    {}
func (*UnbindQQResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{7}
}
func (m *UnbindQQResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UnbindQQResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UnbindQQResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UnbindQQResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbindQQResp.Merge(m, src)
}
func (m *UnbindQQResp) XXX_Size() int {
	return m.Size()
}
func (m *UnbindQQResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbindQQResp.DiscardUnknown(m)
}

var xxx_messageInfo_UnbindQQResp proto.InternalMessageInfo

type GetQQConnectStatusReq struct {
	JwtString            string   `protobuf:"bytes,1,opt,name=jwt_string,json=jwtString,proto3" json:"jwt_string,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQQConnectStatusReq) Reset()         { *m = GetQQConnectStatusReq{} }
func (m *GetQQConnectStatusReq) String() string { return proto.CompactTextString(m) }
func (*GetQQConnectStatusReq) ProtoMessage()    {}
func (*GetQQConnectStatusReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{8}
}
func (m *GetQQConnectStatusReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetQQConnectStatusReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetQQConnectStatusReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetQQConnectStatusReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQQConnectStatusReq.Merge(m, src)
}
func (m *GetQQConnectStatusReq) XXX_Size() int {
	return m.Size()
}
func (m *GetQQConnectStatusReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQQConnectStatusReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetQQConnectStatusReq proto.InternalMessageInfo

func (m *GetQQConnectStatusReq) GetJwtString() string {
	if m != nil {
		return m.JwtString
	}
	return ""
}

type GetQQConnectStatusResp struct {
	Uid                  int64    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Openid               string   `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQQConnectStatusResp) Reset()         { *m = GetQQConnectStatusResp{} }
func (m *GetQQConnectStatusResp) String() string { return proto.CompactTextString(m) }
func (*GetQQConnectStatusResp) ProtoMessage()    {}
func (*GetQQConnectStatusResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab5f95b3254c4306, []int{9}
}
func (m *GetQQConnectStatusResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetQQConnectStatusResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetQQConnectStatusResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetQQConnectStatusResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQQConnectStatusResp.Merge(m, src)
}
func (m *GetQQConnectStatusResp) XXX_Size() int {
	return m.Size()
}
func (m *GetQQConnectStatusResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQQConnectStatusResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetQQConnectStatusResp proto.InternalMessageInfo

func (m *GetQQConnectStatusResp) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *GetQQConnectStatusResp) GetOpenid() string {
	if m != nil {
		return m.Openid
	}
	return ""
}

func init() {
	proto.RegisterType((*SignInWithQQReq)(nil), "ncs.service.auth.qq.v1.SignInWithQQReq")
	proto.RegisterType((*SignInWithQQResp)(nil), "ncs.service.auth.qq.v1.SignInWithQQResp")
	proto.RegisterType((*GetUIDReq)(nil), "ncs.service.auth.qq.v1.GetUIDReq")
	proto.RegisterType((*GetUIDResp)(nil), "ncs.service.auth.qq.v1.GetUIDResp")
	proto.RegisterType((*BindQQReq)(nil), "ncs.service.auth.qq.v1.BindQQReq")
	proto.RegisterType((*BindQQResp)(nil), "ncs.service.auth.qq.v1.BindQQResp")
	proto.RegisterType((*UnbindQQReq)(nil), "ncs.service.auth.qq.v1.UnbindQQReq")
	proto.RegisterType((*UnbindQQResp)(nil), "ncs.service.auth.qq.v1.UnbindQQResp")
	proto.RegisterType((*GetQQConnectStatusReq)(nil), "ncs.service.auth.qq.v1.GetQQConnectStatusReq")
	proto.RegisterType((*GetQQConnectStatusResp)(nil), "ncs.service.auth.qq.v1.GetQQConnectStatusResp")
}

func init() {
	proto.RegisterFile("app/service/auth/qq/api/grpc/v1/qq.proto", fileDescriptor_ab5f95b3254c4306)
}

var fileDescriptor_ab5f95b3254c4306 = []byte{
	// 491 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0x71, 0x8a, 0x42, 0x33, 0x35, 0x4d, 0xbb, 0xa2, 0x01, 0x2c, 0x08, 0x74, 0x41, 0x22,
	0x12, 0x74, 0xad, 0x80, 0xc4, 0x03, 0x04, 0xa4, 0xaa, 0x07, 0x0e, 0x4e, 0x88, 0x90, 0xb8, 0x44,
	0xae, 0xb3, 0xb8, 0x5b, 0xa2, 0xdd, 0xb5, 0x67, 0x9d, 0x72, 0xe6, 0xcc, 0x8d, 0x0b, 0x8f, 0xc4,
	0x81, 0x03, 0x12, 0x2f, 0x80, 0x02, 0x0f, 0x82, 0xfc, 0x91, 0x0f, 0x42, 0x82, 0xd3, 0x9b, 0x77,
	0xfc, 0x9f, 0xff, 0xcc, 0xce, 0xfc, 0xb4, 0xd0, 0xf2, 0xb5, 0x76, 0x91, 0xc7, 0x63, 0x11, 0x70,
	0xd7, 0x4f, 0xcc, 0x99, 0x1b, 0x45, 0xae, 0xaf, 0x85, 0x1b, 0xc6, 0x3a, 0x70, 0xc7, 0x6d, 0x37,
	0x8a, 0x98, 0x8e, 0x95, 0x51, 0xa4, 0x21, 0x03, 0x64, 0x85, 0x92, 0xa5, 0x4a, 0x16, 0x45, 0x6c,
	0xdc, 0x76, 0xee, 0x84, 0x4a, 0x85, 0x23, 0x9e, 0x25, 0xf9, 0x52, 0x2a, 0xe3, 0x1b, 0xa1, 0x24,
	0xe6, 0x59, 0x74, 0x1f, 0xea, 0x3d, 0x11, 0xca, 0x13, 0xf9, 0x46, 0x98, 0x33, 0xcf, 0xeb, 0xf2,
	0x88, 0x1e, 0xc1, 0xde, 0xdf, 0x21, 0xd4, 0xe4, 0x36, 0x6c, 0xa7, 0x96, 0x83, 0x24, 0x1e, 0xdd,
	0xb2, 0xee, 0x5b, 0xad, 0x5a, 0xf7, 0x5a, 0x7a, 0xee, 0xc7, 0x23, 0xca, 0xa0, 0x76, 0xcc, 0x4d,
	0xff, 0xe4, 0x65, 0x97, 0x47, 0xe4, 0x10, 0x6c, 0x3f, 0x08, 0x38, 0xe2, 0xc0, 0xa8, 0xf7, 0x5c,
	0x16, 0xda, 0x9d, 0x3c, 0xf6, 0x3a, 0x0d, 0xd1, 0xc7, 0x00, 0x53, 0x3d, 0x6a, 0x72, 0x17, 0xe0,
	0xfc, 0xc2, 0x0c, 0xd0, 0xc4, 0x42, 0x86, 0x85, 0xbc, 0x76, 0x7e, 0x61, 0x7a, 0x59, 0x80, 0xbe,
	0x82, 0x5a, 0x47, 0xc8, 0x61, 0xd6, 0xd8, 0x06, 0xe6, 0x4b, 0x76, 0x95, 0x65, 0x3b, 0x1b, 0x60,
	0x6a, 0x87, 0x9a, 0x3e, 0x81, 0x9d, 0xbe, 0x3c, 0x9d, 0xd9, 0x97, 0xb4, 0xb2, 0x0b, 0xf6, 0x5c,
	0x8d, 0x9a, 0x3e, 0x87, 0x83, 0x63, 0x6e, 0x3c, 0xef, 0x85, 0x92, 0x92, 0x07, 0xa6, 0x67, 0x7c,
	0x93, 0xe0, 0x06, 0x3e, 0x1d, 0x68, 0xac, 0xca, 0x43, 0x4d, 0xf6, 0x60, 0x2b, 0x11, 0xc3, 0x2c,
	0x63, 0xab, 0x9b, 0x7e, 0x92, 0x06, 0x54, 0x95, 0xe6, 0x52, 0x0c, 0x8b, 0xab, 0x14, 0xa7, 0xa7,
	0xdf, 0xae, 0x42, 0xc5, 0xf3, 0xc8, 0x07, 0xb0, 0x17, 0x37, 0x45, 0x1e, 0xb1, 0xd5, 0x0c, 0xb0,
	0xa5, 0x15, 0x3b, 0xad, 0xcd, 0x84, 0xa8, 0xe9, 0xc1, 0xc7, 0x1f, 0xbf, 0x3f, 0x57, 0xea, 0xe4,
	0xfa, 0x0c, 0x3e, 0x14, 0xa1, 0x24, 0x9f, 0x2c, 0x20, 0xff, 0xde, 0x82, 0x1c, 0xad, 0xf3, 0x5d,
	0x39, 0x29, 0x87, 0x5d, 0x46, 0x8e, 0x9a, 0xde, 0xcc, 0x9a, 0xd9, 0xa7, 0xf5, 0x79, 0x33, 0x79,
	0x5d, 0x0e, 0xd5, 0x9c, 0x29, 0x72, 0xf8, 0x1f, 0xcb, 0x9c, 0x51, 0x87, 0x96, 0x49, 0x50, 0xd3,
	0x1b, 0x59, 0xa5, 0x5d, 0x6a, 0xcf, 0x2a, 0xa5, 0xeb, 0x78, 0x07, 0xd5, 0x1c, 0x9f, 0xf5, 0x65,
	0x66, 0xb4, 0xae, 0x2f, 0xb3, 0x40, 0x60, 0x31, 0x5d, 0x3a, 0x9f, 0x6e, 0x0a, 0x18, 0x91, 0xb0,
	0x3d, 0x45, 0x8d, 0x3c, 0x58, 0x67, 0xb3, 0x80, 0xae, 0xf3, 0xb0, 0x5c, 0xb4, 0x72, 0x7c, 0x49,
	0xf6, 0xbb, 0xd3, 0xfe, 0x3a, 0x69, 0x5a, 0xdf, 0x27, 0x4d, 0xeb, 0xe7, 0xa4, 0x69, 0x7d, 0xf9,
	0xd5, 0xbc, 0xf2, 0xf6, 0x5e, 0xc9, 0xb3, 0x73, 0x5a, 0xcd, 0x9e, 0x8f, 0x67, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xa2, 0xac, 0x8f, 0x47, 0xa0, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// QQClient is the client API for QQ service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type QQClient interface {
	SignInWithQQ(ctx context.Context, in *SignInWithQQReq, opts ...grpc.CallOption) (*SignInWithQQResp, error)
	GetQQConnectStatus(ctx context.Context, in *GetQQConnectStatusReq, opts ...grpc.CallOption) (*GetQQConnectStatusResp, error)
	GetUID(ctx context.Context, in *GetUIDReq, opts ...grpc.CallOption) (*GetUIDResp, error)
	BindQQ(ctx context.Context, in *BindQQReq, opts ...grpc.CallOption) (*BindQQResp, error)
	UnbindQQ(ctx context.Context, in *UnbindQQReq, opts ...grpc.CallOption) (*UnbindQQResp, error)
}

type qQClient struct {
	cc *grpc.ClientConn
}

func NewQQClient(cc *grpc.ClientConn) QQClient {
	return &qQClient{cc}
}

func (c *qQClient) SignInWithQQ(ctx context.Context, in *SignInWithQQReq, opts ...grpc.CallOption) (*SignInWithQQResp, error) {
	out := new(SignInWithQQResp)
	err := c.cc.Invoke(ctx, "/ncs.service.auth.qq.v1.QQ/SignInWithQQ", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQClient) GetQQConnectStatus(ctx context.Context, in *GetQQConnectStatusReq, opts ...grpc.CallOption) (*GetQQConnectStatusResp, error) {
	out := new(GetQQConnectStatusResp)
	err := c.cc.Invoke(ctx, "/ncs.service.auth.qq.v1.QQ/GetQQConnectStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQClient) GetUID(ctx context.Context, in *GetUIDReq, opts ...grpc.CallOption) (*GetUIDResp, error) {
	out := new(GetUIDResp)
	err := c.cc.Invoke(ctx, "/ncs.service.auth.qq.v1.QQ/GetUID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQClient) BindQQ(ctx context.Context, in *BindQQReq, opts ...grpc.CallOption) (*BindQQResp, error) {
	out := new(BindQQResp)
	err := c.cc.Invoke(ctx, "/ncs.service.auth.qq.v1.QQ/BindQQ", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *qQClient) UnbindQQ(ctx context.Context, in *UnbindQQReq, opts ...grpc.CallOption) (*UnbindQQResp, error) {
	out := new(UnbindQQResp)
	err := c.cc.Invoke(ctx, "/ncs.service.auth.qq.v1.QQ/UnbindQQ", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QQServer is the server API for QQ service.
type QQServer interface {
	SignInWithQQ(context.Context, *SignInWithQQReq) (*SignInWithQQResp, error)
	GetQQConnectStatus(context.Context, *GetQQConnectStatusReq) (*GetQQConnectStatusResp, error)
	GetUID(context.Context, *GetUIDReq) (*GetUIDResp, error)
	BindQQ(context.Context, *BindQQReq) (*BindQQResp, error)
	UnbindQQ(context.Context, *UnbindQQReq) (*UnbindQQResp, error)
}

// UnimplementedQQServer can be embedded to have forward compatible implementations.
type UnimplementedQQServer struct {
}

func (*UnimplementedQQServer) SignInWithQQ(ctx context.Context, req *SignInWithQQReq) (*SignInWithQQResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SignInWithQQ not implemented")
}
func (*UnimplementedQQServer) GetQQConnectStatus(ctx context.Context, req *GetQQConnectStatusReq) (*GetQQConnectStatusResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQQConnectStatus not implemented")
}
func (*UnimplementedQQServer) GetUID(ctx context.Context, req *GetUIDReq) (*GetUIDResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUID not implemented")
}
func (*UnimplementedQQServer) BindQQ(ctx context.Context, req *BindQQReq) (*BindQQResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BindQQ not implemented")
}
func (*UnimplementedQQServer) UnbindQQ(ctx context.Context, req *UnbindQQReq) (*UnbindQQResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnbindQQ not implemented")
}

func RegisterQQServer(s *grpc.Server, srv QQServer) {
	s.RegisterService(&_QQ_serviceDesc, srv)
}

func _QQ_SignInWithQQ_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignInWithQQReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQServer).SignInWithQQ(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ncs.service.auth.qq.v1.QQ/SignInWithQQ",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQServer).SignInWithQQ(ctx, req.(*SignInWithQQReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQ_GetQQConnectStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQQConnectStatusReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQServer).GetQQConnectStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ncs.service.auth.qq.v1.QQ/GetQQConnectStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQServer).GetQQConnectStatus(ctx, req.(*GetQQConnectStatusReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQ_GetUID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUIDReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQServer).GetUID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ncs.service.auth.qq.v1.QQ/GetUID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQServer).GetUID(ctx, req.(*GetUIDReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQ_BindQQ_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BindQQReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQServer).BindQQ(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ncs.service.auth.qq.v1.QQ/BindQQ",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQServer).BindQQ(ctx, req.(*BindQQReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _QQ_UnbindQQ_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbindQQReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QQServer).UnbindQQ(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ncs.service.auth.qq.v1.QQ/UnbindQQ",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QQServer).UnbindQQ(ctx, req.(*UnbindQQReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _QQ_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ncs.service.auth.qq.v1.QQ",
	HandlerType: (*QQServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignInWithQQ",
			Handler:    _QQ_SignInWithQQ_Handler,
		},
		{
			MethodName: "GetQQConnectStatus",
			Handler:    _QQ_GetQQConnectStatus_Handler,
		},
		{
			MethodName: "GetUID",
			Handler:    _QQ_GetUID_Handler,
		},
		{
			MethodName: "BindQQ",
			Handler:    _QQ_BindQQ_Handler,
		},
		{
			MethodName: "UnbindQQ",
			Handler:    _QQ_UnbindQQ_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app/service/auth/qq/api/grpc/v1/qq.proto",
}

func (m *SignInWithQQReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SignInWithQQReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SignInWithQQReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *SignInWithQQResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SignInWithQQResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SignInWithQQResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AuthUrl) > 0 {
		i -= len(m.AuthUrl)
		copy(dAtA[i:], m.AuthUrl)
		i = encodeVarintQq(dAtA, i, uint64(len(m.AuthUrl)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetUIDReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUIDReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUIDReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintQq(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetUIDResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetUIDResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetUIDResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JwtString) > 0 {
		i -= len(m.JwtString)
		copy(dAtA[i:], m.JwtString)
		i = encodeVarintQq(dAtA, i, uint64(len(m.JwtString)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BindQQReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BindQQReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BindQQReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JwtString) > 0 {
		i -= len(m.JwtString)
		copy(dAtA[i:], m.JwtString)
		i = encodeVarintQq(dAtA, i, uint64(len(m.JwtString)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AccessToken) > 0 {
		i -= len(m.AccessToken)
		copy(dAtA[i:], m.AccessToken)
		i = encodeVarintQq(dAtA, i, uint64(len(m.AccessToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *BindQQResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *BindQQResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *BindQQResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *UnbindQQReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnbindQQReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnbindQQReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JwtString) > 0 {
		i -= len(m.JwtString)
		copy(dAtA[i:], m.JwtString)
		i = encodeVarintQq(dAtA, i, uint64(len(m.JwtString)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *UnbindQQResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UnbindQQResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UnbindQQResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetQQConnectStatusReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetQQConnectStatusReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetQQConnectStatusReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.JwtString) > 0 {
		i -= len(m.JwtString)
		copy(dAtA[i:], m.JwtString)
		i = encodeVarintQq(dAtA, i, uint64(len(m.JwtString)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetQQConnectStatusResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetQQConnectStatusResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetQQConnectStatusResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Openid) > 0 {
		i -= len(m.Openid)
		copy(dAtA[i:], m.Openid)
		i = encodeVarintQq(dAtA, i, uint64(len(m.Openid)))
		i--
		dAtA[i] = 0x12
	}
	if m.Uid != 0 {
		i = encodeVarintQq(dAtA, i, uint64(m.Uid))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintQq(dAtA []byte, offset int, v uint64) int {
	offset -= sovQq(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *SignInWithQQReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SignInWithQQResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AuthUrl)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUIDReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetUIDResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JwtString)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BindQQReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AccessToken)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	l = len(m.JwtString)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *BindQQResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnbindQQReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JwtString)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UnbindQQResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetQQConnectStatusReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.JwtString)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetQQConnectStatusResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Uid != 0 {
		n += 1 + sovQq(uint64(m.Uid))
	}
	l = len(m.Openid)
	if l > 0 {
		n += 1 + l + sovQq(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovQq(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQq(x uint64) (n int) {
	return sovQq(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *SignInWithQQReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SignInWithQQReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SignInWithQQReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SignInWithQQResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SignInWithQQResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SignInWithQQResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AuthUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUIDReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUIDReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUIDReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetUIDResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetUIDResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetUIDResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JwtString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BindQQReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BindQQReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BindQQReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JwtString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *BindQQResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: BindQQResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: BindQQResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnbindQQReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnbindQQReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnbindQQReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JwtString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UnbindQQResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UnbindQQResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UnbindQQResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetQQConnectStatusReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetQQConnectStatusReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetQQConnectStatusReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JwtString", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JwtString = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetQQConnectStatusResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQq
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetQQConnectStatusResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetQQConnectStatusResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			m.Uid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Uid |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Openid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQq
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQq
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQq
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Openid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQq(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQq
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQq(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQq
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQq
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQq
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQq
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQq
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQq
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQq        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQq          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQq = fmt.Errorf("proto: unexpected end of group")
)
