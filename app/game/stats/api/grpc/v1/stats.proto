syntax = "proto3";
package ncs.game.stats.v1;
option go_package = "backend/app/game/stats/api/grpc/v1";

import "google/api/annotations.proto";

message GetReq {
    string range = 1;
    string stats_name = 2;
    string version = 3;
    int64 uid = 4;
}

message GetResp {
    int64 uid = 1;
    float score = 2;
    int64 rank = 3;
    int64 total = 4;
}

message GetAllReq {
    string range = 1;
    string stats_name = 2;
    string version = 3;
}

message GetAllResp {
    repeated GetResp stats = 1;
}

message GetsReq {
    repeated GetReq stats = 1;
}

message StatsInfo {
    string range = 1;
    string stats_name = 2;
    string version = 3;
    int64 uid = 4;
    float score = 5;
    int64 rank = 6;
    int64 total = 7;
}

message GetsResp {
    repeated StatsInfo stats = 1;
}

message SetReq {
    string range = 1;
    string stats_name = 2;
    string version = 3;
    int64 uid = 4;
    float score = 5;
}

message SetsReq {
    repeated SetReq stats = 1;
}

message SetResp {
}

message IncrReq {
    string range = 1;
    string stats_name = 2;
    string version = 3;
    int64 uid = 4;
    float increment = 5;
}

message IncrsReq {
    repeated IncrReq stats = 1;
}

message IncrResp {
}

service Stats {
    rpc Get (GetReq) returns (GetResp) {
        option (google.api.http) = {
            get: "/game/stats/user/{uid}/{stats_name}/{version}"
            additional_bindings: {
                get: "/game/stats/user/{uid}/{stats_name}/{version}/{range}"
            }
        };
    }
    rpc GetAll (GetAllReq) returns (GetAllResp) {
        option (google.api.http) = {
            get: "/game/stats/{stats_name}/{version}"
            additional_bindings: {
                get: "/game/stats/{stats_name}/{version}/{range}"
            }
        };
    }
    rpc Gets (GetsReq) returns (GetsResp) {
        option (google.api.http) = {
            post: "/game/stats/gets"
            body: "*"
        };
    }
    rpc Set (SetReq) returns (SetResp) {
        option (google.api.http) = {
            post: "/game/stats/user/set"
            body: "*"
        };
    }
    rpc Sets (SetsReq) returns (SetResp) {
        option (google.api.http) = {
            post: "/game/stats/user/sets"
            body: "*"
        };
    }
    rpc Incr (IncrReq) returns (IncrResp) {
        option (google.api.http) = {
            post: "/game/stats/user/incr"
            body: "*"
        };
    }
    rpc Incrs (IncrsReq) returns (IncrResp) {
        option (google.api.http) = {
            post: "/game/stats/user/incrs"
            body: "*"
        };
    }
}