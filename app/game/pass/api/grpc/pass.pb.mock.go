// Code generated by MockGen. DO NOT EDIT.
// Source: app/game/pass/api/grpc/pass.pb.go

// Package grpc is a generated GoMock package.
package grpc

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockPassClient is a mock of PassClient interface
type MockPassClient struct {
	ctrl     *gomock.Controller
	recorder *MockPassClientMockRecorder
}

// MockPassClientMockRecorder is the mock recorder for MockPassClient
type MockPassClientMockRecorder struct {
	mock *MockPassClient
}

// NewMockPassClient creates a new mock instance
func NewMockPassClient(ctrl *gomock.Controller) *MockPassClient {
	mock := &MockPassClient{ctrl: ctrl}
	mock.recorder = &MockPassClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPassClient) EXPECT() *MockPassClientMockRecorder {
	return m.recorder
}

// GetRewards mocks base method
func (m *MockPassClient) GetRewards(ctx context.Context, in *GetRewardsReq, opts ...grpc.CallOption) (*GetRewardsResp, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetRewards", varargs...)
	ret0, _ := ret[0].(*GetRewardsResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRewards indicates an expected call of GetRewards
func (mr *MockPassClientMockRecorder) GetRewards(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewards", reflect.TypeOf((*MockPassClient)(nil).GetRewards), varargs...)
}

// UsePointBox mocks base method
func (m *MockPassClient) UsePointBox(ctx context.Context, in *UsePointBoxReq, opts ...grpc.CallOption) (*UsePointBoxResp, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UsePointBox", varargs...)
	ret0, _ := ret[0].(*UsePointBoxResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UsePointBox indicates an expected call of UsePointBox
func (mr *MockPassClientMockRecorder) UsePointBox(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UsePointBox", reflect.TypeOf((*MockPassClient)(nil).UsePointBox), varargs...)
}

// MockPassServer is a mock of PassServer interface
type MockPassServer struct {
	ctrl     *gomock.Controller
	recorder *MockPassServerMockRecorder
}

// MockPassServerMockRecorder is the mock recorder for MockPassServer
type MockPassServerMockRecorder struct {
	mock *MockPassServer
}

// NewMockPassServer creates a new mock instance
func NewMockPassServer(ctrl *gomock.Controller) *MockPassServer {
	mock := &MockPassServer{ctrl: ctrl}
	mock.recorder = &MockPassServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPassServer) EXPECT() *MockPassServerMockRecorder {
	return m.recorder
}

// GetRewards mocks base method
func (m *MockPassServer) GetRewards(arg0 context.Context, arg1 *GetRewardsReq) (*GetRewardsResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRewards", arg0, arg1)
	ret0, _ := ret[0].(*GetRewardsResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRewards indicates an expected call of GetRewards
func (mr *MockPassServerMockRecorder) GetRewards(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRewards", reflect.TypeOf((*MockPassServer)(nil).GetRewards), arg0, arg1)
}

// UsePointBox mocks base method
func (m *MockPassServer) UsePointBox(arg0 context.Context, arg1 *UsePointBoxReq) (*UsePointBoxResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UsePointBox", arg0, arg1)
	ret0, _ := ret[0].(*UsePointBoxResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UsePointBox indicates an expected call of UsePointBox
func (mr *MockPassServerMockRecorder) UsePointBox(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UsePointBox", reflect.TypeOf((*MockPassServer)(nil).UsePointBox), arg0, arg1)
}
