image:
  name: registry.new-page.xyz/bazel-public/ubuntu2004-java11:latest

variables:
  GIT_CLEAN_FLAGS: -ffdx -e .cache/
  GOPROXY: http://goproxy.golang:8080
  GO111MODULE: "on"

before_script:
  - chmod -R +x build
  - mkdir $HOME/.docker
  - export HTTP_PROXY=http://hkt.v2ray:1080 HTTPS_PROXY=http://hkt.v2ray:1080 NO_PROXY=hkt.v2ray,goproxy.golang,*.new-page.xyz,*.local
  - echo $DOCKER_AUTH_CONFIG > $HOME/.docker/config.json

cache:
  key: bazel_cache
  paths:
    - .cache/

stages:
  - build
  - push images
  - deploy

lint-golang:
  stage: build
  image: registry.new-page.xyz/golangci/golangci-lint:latest-alpine
  script:
    - golangci-lint run -v --timeout 5m
  allow_failure: true
  cache: {}

lint-helm:
  stage: build
  image: registry.new-page.xyz/alpine/helm:3.2.3
  script:
    - helm lint ./chart
  allow_failure: true
  cache: {}

build:
  stage: build
  script:
    - bazel version
    - bazel build --config=ci --noshow_progress -k //app/... //pkg/...
    - bazel test --config=ci --noshow_progress -k //app/... //pkg/...

build-merged:
  stage: build
  script:
    - git config --global user.email "runner@gitlab.com"
    - git config --global user.name "Runner"
    - git pull origin master
    - bazel version
    - bazel build --config=ci --noshow_progress -k //app/... //pkg/...
    - bazel test --config=ci --noshow_progress -k //app/... //pkg/...
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

push changed images:
  stage: push images
  script:
    - build/push-images.sh changed
  rules:
    - if: $CI_COMMIT_BRANCH == "master"

force push all images:
  stage: push images
  script:
    - build/push-images.sh
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      allow_failure: true
      when: manual
    - when: never

deploy-ins:
  stage: deploy
  image: registry.new-page.xyz/alpine/helm:3.2.3
  script:
    - mkdir ~/.kube && echo -n $KUBE_CONFIG | base64 -d > ~/.kube/config
    - helm upgrade --install --namespace ncs -f ./chart/ins.yaml ncs ./chart
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      allow_failure: true
      when: manual
    - when: never
  needs: ["push changed images"]
  cache: {}